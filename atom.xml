<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>邓利</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dc1006.cn/"/>
  <updated>2020-07-29T13:57:04.314Z</updated>
  <id>http://dc1006.cn/</id>
  
  <author>
    <name>邓利</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS弹性布局 Flex</title>
    <link href="http://dc1006.cn/2020/07/29/css%E5%BC%B9%E6%80%A7%E5%B8%83%E5%B1%80/"/>
    <id>http://dc1006.cn/2020/07/29/css%E5%BC%B9%E6%80%A7%E5%B8%83%E5%B1%80/</id>
    <published>2020-07-29T12:56:53.109Z</published>
    <updated>2020-07-29T13:57:04.314Z</updated>
    
    <content type="html"><![CDATA[<p>弹性布局是新一代的布局方式，在传统的布局中使用浮动  float<br>而传统的浮动布局致命的缺点就是浮动元素一旦脱离了文档流，就无法撑起父元素，会造成父元素的高度塌陷。<br>CSS的代码将高度依赖于HTML代码结构等等….</p><h1 id="使用Flex布局"><a href="#使用Flex布局" class="headerlink" title="使用Flex布局"></a>使用Flex布局</h1><h2 id="要使用弹性布局，需要在父元素上设置-display-flex-属性"><a href="#要使用弹性布局，需要在父元素上设置-display-flex-属性" class="headerlink" title="要使用弹性布局，需要在父元素上设置 display:flex;属性"></a>要使用弹性布局，需要在父元素上设置 <code>display:flex;</code>属性</h2><p><font color='red'> 注意： </font> 给元素设置了Flex布局以后，它的子元素的float、clear、和vertical-align三个属性将会失效。</p><h2 id="行内元素使用弹性布局，需要在父元素设置-display-inline-flex-属性"><a href="#行内元素使用弹性布局，需要在父元素设置-display-inline-flex-属性" class="headerlink" title="行内元素使用弹性布局，需要在父元素设置 display:inline-flex 属性"></a>行内元素使用弹性布局，需要在父元素设置 <code>display:inline-flex</code> 属性</h2><h2 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h2><h3 id="弹性布局中开启弹性布局的元素成为-容器-把弹性布局中的综援素称为项目"><a href="#弹性布局中开启弹性布局的元素成为-容器-把弹性布局中的综援素称为项目" class="headerlink" title="弹性布局中开启弹性布局的元素成为  容器  把弹性布局中的综援素称为项目"></a>弹性布局中开启弹性布局的元素成为  容器  把弹性布局中的综援素称为项目</h3><h3 id="弹性布局的容器的两根轴-主轴和交叉轴"><a href="#弹性布局的容器的两根轴-主轴和交叉轴" class="headerlink" title="弹性布局的容器的两根轴(主轴和交叉轴)"></a>弹性布局的容器的两根轴(主轴和交叉轴)</h3><h4 id="主轴：所排列的方向为主轴-若横向排列则主轴为X轴，交叉轴为Y轴"><a href="#主轴：所排列的方向为主轴-若横向排列则主轴为X轴，交叉轴为Y轴" class="headerlink" title="主轴：所排列的方向为主轴(若横向排列则主轴为X轴，交叉轴为Y轴)"></a>主轴：所排列的方向为主轴(若横向排列则主轴为X轴，交叉轴为Y轴)</h4><h4 id="交叉轴：与主轴相交叉的周"><a href="#交叉轴：与主轴相交叉的周" class="headerlink" title="交叉轴：与主轴相交叉的周"></a>交叉轴：与主轴相交叉的周</h4><h3 id="在弹性布局中项目的尺寸，默认情况下-不设置宽高-，占据主轴方向的尺寸内容大小，交叉轴的尺寸尽量的占满整个容器"><a href="#在弹性布局中项目的尺寸，默认情况下-不设置宽高-，占据主轴方向的尺寸内容大小，交叉轴的尺寸尽量的占满整个容器" class="headerlink" title="在弹性布局中项目的尺寸，默认情况下(不设置宽高)，占据主轴方向的尺寸内容大小，交叉轴的尺寸尽量的占满整个容器"></a>在弹性布局中项目的尺寸，默认情况下(不设置宽高)，占据主轴方向的尺寸内容大小，交叉轴的尺寸尽量的占满整个容器</h3><h1 id="属性值："><a href="#属性值：" class="headerlink" title="属性值："></a>属性值：</h1><h2 id="flex-direction-设置主轴方向（设置布局方向）"><a href="#flex-direction-设置主轴方向（设置布局方向）" class="headerlink" title="flex-direction:;设置主轴方向（设置布局方向）"></a><code>flex-direction:;</code>设置主轴方向（设置布局方向）</h2><table><thead><tr><th>值</th><th></th><th>说明</th></tr></thead><tbody><tr><td>row</td><td></td><td>默认值，从左至右水平排列</td></tr><tr><td>row-reverse</td><td></td><td>从右至左水平排列</td></tr><tr><td>column</td><td></td><td>从上至下垂直排列</td></tr><tr><td>column-reverse</td><td></td><td>从下至上垂直排列</td></tr></tbody></table><h3 id="例"><a href="#例" class="headerlink" title="例"></a>例</h3><p><img src="https://img-blog.csdn.net/20180627170237841" alt="image"></p><p><font color='red'> 注意： </font>图片来自 @Demi</p><h2 id="justify-content-设置子项目在主轴方向的对齐方式"><a href="#justify-content-设置子项目在主轴方向的对齐方式" class="headerlink" title="justify-content:;设置子项目在主轴方向的对齐方式"></a><code>justify-content:;</code>设置子项目在主轴方向的对齐方式</h2><table><thead><tr><th>值</th><th></th><th>说明</th></tr></thead><tbody><tr><td>center</td><td></td><td>居中（根据主轴方向居中）</td></tr><tr><td>flex-start</td><td></td><td>对齐开始的位置</td></tr><tr><td>flex-end</td><td></td><td>对齐结束的位置</td></tr><tr><td>space-between</td><td></td><td>两端对齐,项目之间的间隔相等，项目于边框之间没有距离</td></tr><tr><td>space-around</td><td></td><td>分散对齐，项目之间的间隔相等，项目与边框之间的距离是项目之间据距离的一半</td></tr></tbody></table><h2 id="align-items-设置子项目在交叉轴的对齐方式"><a href="#align-items-设置子项目在交叉轴的对齐方式" class="headerlink" title="align-items:;设置子项目在交叉轴的对齐方式"></a><code>align-items:;</code>设置子项目在交叉轴的对齐方式</h2><table><thead><tr><th>值</th><th></th><th>说明</th></tr></thead><tbody><tr><td>center</td><td></td><td>居中（根据交叉轴方向居中）</td></tr><tr><td>flex-start</td><td></td><td>对齐开始的位置</td></tr><tr><td>flex-end</td><td></td><td>对齐结束的位置</td></tr><tr><td>stretch</td><td></td><td>默认值 如果项目未设置高度或者是auto将沾满整个容器的高度</td></tr><tr><td>baseline</td><td></td><td>基线对齐</td></tr></tbody></table><h2 id="align-self-单独设置子项目交叉轴的对齐方式-设置项目自身在交叉轴上的对齐方式，会覆盖父标签的align-items的值。"><a href="#align-self-单独设置子项目交叉轴的对齐方式-设置项目自身在交叉轴上的对齐方式，会覆盖父标签的align-items的值。" class="headerlink" title="align-self:;单独设置子项目交叉轴的对齐方式 设置项目自身在交叉轴上的对齐方式，会覆盖父标签的align- items的值。"></a><code>align-self:;</code>单独设置子项目交叉轴的对齐方式 设置项目自身在交叉轴上的对齐方式，会覆盖父标签的align- items的值。</h2><table><thead><tr><th>值</th><th></th><th>说明</th></tr></thead><tbody><tr><td>center</td><td></td><td>居中</td></tr><tr><td>flex-start</td><td></td><td>对齐开始的位置</td></tr><tr><td>flex-end</td><td></td><td>对齐结束的位置</td></tr><tr><td>stretch</td><td></td><td>默认值 如果项目未设置高度或者是auto将沾满整个容器的高度</td></tr><tr><td>baseline</td><td></td><td>基线对齐</td></tr><tr><td>auto</td><td></td><td>默认取父标签align-items的值</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;弹性布局是新一代的布局方式，在传统的布局中使用浮动  float&lt;br&gt;而传统的浮动布局致命的缺点就是浮动元素一旦脱离了文档流，就无法撑起父元素，会造成父元素的高度塌陷。&lt;br&gt;CSS的代码将高度依赖于HTML代码结构等等….&lt;/p&gt;
&lt;h1 id=&quot;使用Flex布局&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://dc1006.cn/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://dc1006.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS3帧动画</title>
    <link href="http://dc1006.cn/2020/07/28/css3%E5%8A%A8%E7%94%BB/"/>
    <id>http://dc1006.cn/2020/07/28/css3%E5%8A%A8%E7%94%BB/</id>
    <published>2020-07-28T03:04:22.000Z</published>
    <updated>2020-07-29T12:57:07.289Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章简答介绍 CSS3中 animation 帧动画的简单介绍及使用。</p><h1 id="CSS3-animation-帧动画"><a href="#CSS3-animation-帧动画" class="headerlink" title="CSS3 animation 帧动画"></a>CSS3 animation 帧动画</h1><h2 id="keyframes：关键帧"><a href="#keyframes：关键帧" class="headerlink" title="@keyframes：关键帧"></a>@keyframes：关键帧</h2><h3 id="在CSS中，通过关键字-keyframes-规则创建帧动画"><a href="#在CSS中，通过关键字-keyframes-规则创建帧动画" class="headerlink" title="在CSS中，通过关键字 @keyframes 规则创建帧动画"></a>在CSS中，通过关键字 <code>@keyframes</code> 规则创建帧动画</h3><h2 id="animation：帧动画"><a href="#animation：帧动画" class="headerlink" title="animation：帧动画"></a>animation：帧动画</h2><h3 id="当在-keyframe创建动画，把它绑定到一个选择器"><a href="#当在-keyframe创建动画，把它绑定到一个选择器" class="headerlink" title="当在@keyframe创建动画，把它绑定到一个选择器"></a>当在@keyframe创建动画，把它绑定到一个选择器</h3><h4 id="animation-是一个简写的属性，可以用来设置6个动画属性"><a href="#animation-是一个简写的属性，可以用来设置6个动画属性" class="headerlink" title="animation:是一个简写的属性，可以用来设置6个动画属性"></a><code>animation</code>:是一个简写的属性，可以用来设置6个动画属性</h4><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><h5 id="animation-name-这个就是使用-keyframes定义的动画名称；"><a href="#animation-name-这个就是使用-keyframes定义的动画名称；" class="headerlink" title="animation-name:这个就是使用@keyframes定义的动画名称；"></a><code>animation-name</code>:这个就是使用@keyframes定义的动画名称；</h5><h5 id="animation-duration-动画执行的时间，以秒为单位"><a href="#animation-duration-动画执行的时间，以秒为单位" class="headerlink" title="animation-duration:动画执行的时间，以秒为单位"></a><code>animation-duration</code>:动画执行的时间，以秒为单位</h5><h5 id="animation-delay-规定动画开始之前的延迟"><a href="#animation-delay-规定动画开始之前的延迟" class="headerlink" title="animation-delay:规定动画开始之前的延迟"></a><code>animation-delay</code>:规定动画开始之前的延迟</h5><h5 id="animation-iteration-count-规定动画应该播放的次数"><a href="#animation-iteration-count-规定动画应该播放的次数" class="headerlink" title="animation-iteration-count:规定动画应该播放的次数"></a><code>animation-iteration-count</code>:规定动画应该播放的次数</h5><h5 id="animation-direction-规定是否应该轮流反向播放动画"><a href="#animation-direction-规定是否应该轮流反向播放动画" class="headerlink" title="animation-direction:规定是否应该轮流反向播放动画"></a><code>animation-direction</code>:规定是否应该轮流反向播放动画</h5><h5 id="animation-timing-function-规定动画的速度曲线"><a href="#animation-timing-function-规定动画的速度曲线" class="headerlink" title="animation-timing-function:规定动画的速度曲线"></a><code>animation-timing-function</code>:规定动画的速度曲线</h5><h3 id="animation简写属性：animation-name-duration-timing-function-delay-iteration-count-direction-fill-mode"><a href="#animation简写属性：animation-name-duration-timing-function-delay-iteration-count-direction-fill-mode" class="headerlink" title="animation简写属性：animation: name duration timing-function delay iteration-count direction fill-mode;"></a><code>animation</code>简写属性：animation: name duration timing-function delay iteration-count direction fill-mode;</h3><h3 id="animation属性补充"><a href="#animation属性补充" class="headerlink" title="animation属性补充"></a>animation属性补充</h3><h4 id="animation-delay语法：animation-delay-time"><a href="#animation-delay语法：animation-delay-time" class="headerlink" title="animation-delay语法：animation-delay: time;"></a><code>animation-delay</code>语法：<code>animation-delay: time;</code></h4><h5 id="例：animation-delay-3s-延迟3秒后执行动画"><a href="#例：animation-delay-3s-延迟3秒后执行动画" class="headerlink" title="例：animation-delay: 3s;延迟3秒后执行动画"></a>例：<code>animation-delay: 3s;</code>延迟3秒后执行动画</h5><table><thead><tr><th>值</th><th></th><th>描述</th></tr></thead><tbody><tr><td>time</td><td></td><td>定义动画开始前的等待时间，值可选</td></tr></tbody></table><h4 id="animation-iteration-count语法：animation-iteration-count-value"><a href="#animation-iteration-count语法：animation-iteration-count-value" class="headerlink" title="animation-iteration-count语法：animation-iteration-count: value;"></a><code>animation-iteration-count</code>语法：<code>animation-iteration-count: value;</code></h4><h5 id="例：animation-iteration-count-3-播放三次动画"><a href="#例：animation-iteration-count-3-播放三次动画" class="headerlink" title="例：animation-iteration-count:3;播放三次动画"></a>例：<code>animation-iteration-count:3;</code>播放三次动画</h5><table><thead><tr><th>值</th><th></th><th>描述</th></tr></thead><tbody><tr><td>n</td><td></td><td>具体数字，定义要播放多少次动画</td></tr><tr><td>infinite</td><td></td><td>定义无限次播放动画</td></tr></tbody></table><h4 id="animation-direction语法：animation-direction-normal-reverse-alternate-alternate-reverse-initial-inherit"><a href="#animation-direction语法：animation-direction-normal-reverse-alternate-alternate-reverse-initial-inherit" class="headerlink" title="animation-direction语法：animation-direction: normal|reverse|alternate|alternate-reverse|initial|inherit;"></a><code>animation-direction</code>语法：<code>animation-direction: normal|reverse|alternate|alternate-reverse|initial|inherit;</code></h4><h5 id="例：animation-direction-alternate-先执行一次，再反向执行一次"><a href="#例：animation-direction-alternate-先执行一次，再反向执行一次" class="headerlink" title="例：animation-direction:alternate;先执行一次，再反向执行一次"></a>例：<code>animation-direction:alternate;</code>先执行一次，再反向执行一次</h5><table><thead><tr><th>值</th><th></th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td></td><td>具体数字，定义要播放多少次动画</td></tr><tr><td>reverse</td><td></td><td>定义无限次播放动画</td></tr><tr><td>alternate</td><td></td><td>动画在奇数次正向播放，在偶数次反向播放</td></tr><tr><td>alternate-reverse</td><td></td><td>动画在奇数次反向播放，在偶数次正向播放</td></tr><tr><td>initial</td><td></td><td>设置该属性为它的默认值</td></tr><tr><td>inherit</td><td></td><td>从父元素继承该属性</td></tr></tbody></table><h4 id="animation-timing-function语法：animation-timing-function-value"><a href="#animation-timing-function语法：animation-timing-function-value" class="headerlink" title="animation-timing-function语法：animation-timing-function: value;"></a><code>animation-timing-function</code>语法：<code>animation-timing-function: value;</code></h4><h5 id="例：animation-timing-function-linear-从开始到结束以相同的速度播放动画"><a href="#例：animation-timing-function-linear-从开始到结束以相同的速度播放动画" class="headerlink" title="例：animation-timing-function:linear;从开始到结束以相同的速度播放动画"></a>例：<code>animation-timing-function:linear;</code>从开始到结束以相同的速度播放动画</h5><table><thead><tr><th>值</th><th></th><th>描述</th></tr></thead><tbody><tr><td>linear</td><td></td><td>动画从头到尾的速度是相同的(匀速)</td></tr><tr><td>ease</td><td></td><td>默认。动画以低速开始，然后加快，在结束前变慢</td></tr><tr><td>ease-in</td><td></td><td>动画以低速开始</td></tr><tr><td>easy-out</td><td></td><td>动画以低速开始</td></tr><tr><td>ease-in-out</td><td></td><td>动画以低速开始和结束</td></tr><tr><td>cubic-bezier(n,n,n,n)</td><td></td><td></td></tr></tbody></table><h2 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h2><h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@keyframes 动画名称&#123;</span><br><span class="line"> <span class="comment">#  写法一</span></span><br><span class="line">   0%&#123;</span><br><span class="line">       <span class="comment"># 动画的开始</span></span><br><span class="line">   &#125;</span><br><span class="line">   100%&#123;</span><br><span class="line">       <span class="comment"># 动画的结束</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@keyframes 动画名称&#123;</span><br><span class="line"> <span class="comment">#  写法二</span></span><br><span class="line">  from&#123;</span><br><span class="line">   <span class="comment">#  动画的开始</span></span><br><span class="line">  &#125;</span><br><span class="line">  to&#123;</span><br><span class="line">   <span class="comment">#  动画的结束</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">  &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span> /&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">      * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">        background-color: rgb(19, 15, 54);</span><br><span class="line">      &#125;</span><br><span class="line">      main &#123;</span><br><span class="line">        width: 400px;</span><br><span class="line">        height: 400px;</span><br><span class="line">        border: 1px solid <span class="comment">#fff;</span></span><br><span class="line">        margin: 100px auto;</span><br><span class="line">      &#125;</span><br><span class="line">      div &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background-color: yellow;</span><br><span class="line">        animation-name: demo;</span><br><span class="line">        animation-duration: 3s;</span><br><span class="line">        animation-iteration-count: infinite;</span><br><span class="line">      &#125;</span><br><span class="line">      @keyframes demo &#123;</span><br><span class="line">          25%&#123;</span><br><span class="line">              transform: translateX(300px);</span><br><span class="line">          &#125;</span><br><span class="line">          50%&#123;</span><br><span class="line">              transform: translate(300px,300px);</span><br><span class="line">          &#125;</span><br><span class="line">          75%&#123;</span><br><span class="line">              transform: translateY(300px);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;main&gt;</span><br><span class="line">      &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/main&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇文章简答介绍 CSS3中 animation 帧动画的简单介绍及使用。&lt;/p&gt;
&lt;h1 id=&quot;CSS3-animation-帧动画&quot;&gt;&lt;a href=&quot;#CSS3-animation-帧动画&quot; class=&quot;headerlink&quot; title=&quot;CSS3 animat
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://dc1006.cn/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://dc1006.cn/tags/CSS/"/>
    
  </entry>
  
</feed>
